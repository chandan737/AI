# -*- coding: utf-8 -*-
"""Assignment_1_Numpy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hNYtOYJBmHKznrJJk5SqFCTAvden6dfp

Assignment 1:- you will have to generate 1000 random numbers from Gaussian distribution with Mean = 50, Standard Deviation (Std) = 10
Write a short Explanantions.
"""

import numpy as np


mean = 50
std_dev = 10
num_samples = 1000


random_numbers = np.random.normal(loc=mean, scale=std_dev, size=num_samples) #Gaussian distribution

print(random_numbers[:10])

"""Explanation :-

-> np.random.normal() is a NumPy function that generates random numbers following a normal Gaussian distribution.

-> loc is the mean (center) of the distribution (here, 50).

-> scale is the standard deviation (spread) of the distribution (here, 10).

-> size specifies the number of random values to generate (here, 1000).

-> The result is an array of 1000 values centered around 50, with most values within 10 units from the mean.

Assignment 2:- Use numpy to create random user ratings(scale 1-5) for 100 movies.
Calculate average ratingand show top 5 recommended movies.
"""

import numpy as np
import pandas as pd

np.random.seed(42)
rating = np.random.randint(1,6, size=100)

movie_df = pd.DataFrame({'Movie_ID': range(1,101),'Rating': rating})
average_rating = np.mean(rating)

top_5_movies = movie_df.sort_values(by='Rating', ascending=False).head(5)

print(f"Average Rating of all Movies :{average_rating:.2f}")
print("\nTop 5 recommended movies:")
print(top_5_movies)

"""Explanation:-

-> Imports NumPy for numerical operations and Pandas for data manipulation.

-> Sets a random seed to ensure reproducibility. The generated random numbers will be the same every run.

-> Generates an array of 100 random integers between 1 and 5 (inclusive). These represent user ratings for 100 movies on a scale of 1 to 5.

-> Creates a Pandas DataFrame with two columns:
'Movie_ID': numbers from 1 to 100 (each representing a unique movie).
'Rating': the corresponding random rating for each movie.

-> Calculates the average (mean) rating of all 100 movies.

-> Sorts the DataFrame in descending order by the 'Rating' column.

-> Selects the top 5 movies with the highest ratings.
"""